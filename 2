def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg30, arg31):
    var36 = func9(arg31, arg30)
    var37 = func12()
    var42 = func13(arg30, var37)
    var43 = var42 & 955 | 264164675
    var44 = (var37 | 1529108228) | var36
    var45 = (var37 ^ var43) + -747
    var46 = -1247196213 & var36
    var47 = var43 - 962
    var48 = var36 ^ (var37 & var37 ^ arg31)
    var49 = -1590547778 | var45 ^ arg30 - arg31
    var50 = var49 & (var36 + (var45 & var37))
    var51 = arg30 + var47 - var37 | 1124145307
    var52 = (var45 & (var42 - arg31)) | var51
    var53 = (var50 - (var46 ^ -160)) | var47
    var54 = var47 - ((var42 + var48) ^ var37)
    var55 = var51 | var53
    var56 = (var43 + var47 | var53) + var42
    var57 = var48 & (var46 - var48) & var53
    var58 = var45 + var48
    result = ((var45 & var43) | var44 ^ var52) + (var47 & ((((var55 + var43) | arg31 | var56) | var50) ^ var58) + var54)
    return result
def func13(arg38, arg39):
    var40 = 0
    for var41 in xrange(41):
        var40 += var41 - var40 - -5
    return var40
def func12():
    func10()
    result = len(xrange(31))
    func11()
    return result
def func11():
    global len
    del len
def func10():
    global len
    len = lambda x : 7
def func9(arg32, arg33):
    var34 = 0
    for var35 in range(38):
        var34 += (arg33 & var35) ^ var34
    return var34
def func3(arg11, arg12):
    if arg11 < arg12:
        var17 = class4()
    else:
        var17 = class6()
    for var18 in xrange(50):
        var19 = var17.func5
        var19(arg12, var18)
    if arg11 < arg12:
        var20 = arg11 ^ (arg12 + arg11)
    else:
        var20 = arg11 - arg11
    var21 = (arg12 | -6 | arg12) - arg11
    var22 = var21 - arg12
    var23 = -792738738 ^ arg12
    var24 = -833 + -256
    var25 = 298428053 + 741
    var26 = (var21 ^ 562 - var25) | 1331909358
    var27 = 1580061839 - (var23 | 1500800918 + var24)
    var28 = arg12 | var21
    var29 = 639 & var27 & var26 ^ var21
    result = -381517963 ^ (arg12 - -1557802486)
    return result
class class6(object):
    def func5(self, arg15, arg16):
        result = ((arg16 | (1 - arg16 - arg16)) + 960434508) & 1 & arg15
        return result
class class4(class6):
    def func5(self, arg13, arg14):
        result = -964587726 | arg14 & (arg13 ^ (((-1 - arg14) + 767753677) - 0))
        return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = -1944028100 & var7
    var9 = (arg2 ^ -1681039741 & 169 + arg2) - var8 + var8 + arg1
    var10 = arg1 ^ arg1
    result = (var7 - arg1 | arg1) + var10
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(39):
        var5 += var6 | var6 - -4
    return var5
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 11'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 8'
    print 'arg_number: 30'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,
